<?xml version="1.0" encoding="UTF-8"?>

<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
  
<mapper namespace="bitcamp.team.dao.SatisfyDao">

  <resultMap type="satisfy" id="satisfyMap">
    <id column="stf_no"       property="no"/>
    <result column="member_no"  property="mNo"/>
    <result column="product_no"    property="pdNo"/>
    <result column="level"     property="level"/>
    <result column="understand"    property="understand"/>
    <result column="dgn"  property="design"/>
    <result column="as_stf"     property="asStf"/>
    <result column="useful"    property="useful"/>
    <result column="price_stf"    property="priceStf"/>
    <result column="eval"    property="eval"/>
    
    <association property="member" javaType="member">
      <id column="member_no"   property="no"/>
      <result column="n_name" property="nickName"/>
    </association>
    
    <association property="product" javaType="product">
      <id column="product_no"   property="no"/>
      <result column="name" property="name"/>
    </association>
  </resultMap>
  
  <resultMap type="product" id="productMap">
    <id column="product_no" property="no"/>
    <result column="sctg_no" property="smallCategoryNo"/>
    <result column="manufac_no" property="manufacturerNo"/>
    <result column="name" property="name"/>
  </resultMap>
  
  <select id="findAll" resultMap="satisfyMap" parameterType="map">
    select
      s.stf_no,
      s.product_no,
      s.member_no,
      s.level,
      s.dgn,
      s.as_stf,
      s.useful,
      s.price_stf,
      s.eval,
      m.n_name
    from
      satisfy s 
      join member m on s.member_no=m.member_no
    <where>
      <if test="productNo != null">
        s.product_no = #{productNo}
      </if>
    </where>
  </select>
  
   <select id="findByNo" resultMap="satisfyMap" parameterType="int">
    select
      s.stf_no,
      s.level,
      s.understand,
      s.dgn,
      s.as_stf,
      s.useful,
      s.price_stf,
      p.name
    from 
      satisfy s
      join product p on s.product_no=p.product_no
    where 
      s.product_no = #{value};
  </select>
  
  <select id="countAll" resultType="int" parameterType="int">
    select
      count(*)
    from 
      satisfy s
      left outer join product p on s.product_no = p.product_no
    where 
      p.product_no = #{value};
  </select>
  
  <insert id="insert" parameterType="satisfy">
  insert into 
    satisfy(product_no, member_no, level, understand, dgn, as_stf, useful, price_stf, eval)
  value(
        #{pdNo}, 
        #{mNo}, 
        #{level},
        #{understand},
        #{design},
        #{asStf}, 
        #{useful}, 
        #{priceStf},
        #{eval}); 
  </insert>
  
  <update id="update" parameterType="satisfy">
  update 
    satisfy
  set
    level = #{level},
    understand = #{understand},
    dgn = #{design},
    as_stf = #{asStf},
    useful = #{useful},
    price_stf = #{priceStf},
    eval = #{eval}
  where
    stf_no = #{no};
  </update>
  
  <delete id="delete" parameterType="int">
  delete from
    satisfy
  where
    stf_no = #{value}
  </delete>
  
  <select id='findByMemberNo' resultMap="satisfyMap" parameterType="map">
    select
      *
    from
      satisfy
    where
      member_no=#{uNo}
      and
      product_no=#{pNo}
  </select>
  
  
  <delete id='deleteByProductNo' parameterType="int">
    delete from
      satisfy
    where
      product_no = #{value}
  </delete>
  
  
  
  
    
  </mapper>